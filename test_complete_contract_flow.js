// ===================================================================
// SCRIPT ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Workflow ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
// ===================================================================

const { createClient } = require('@supabase/supabase-js');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase (‡πÉ‡∏ä‡πâ environment variables ‡∏à‡∏£‡∏¥‡∏á)
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'YOUR_SUPABASE_URL';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'YOUR_SUPABASE_KEY';
const supabase = createClient(supabaseUrl, supabaseKey);

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á UUID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
 */
function generateUUID() {
  if (typeof crypto !== 'undefined' && crypto.randomUUID) {
    return crypto.randomUUID();
  }
  
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    const r = Math.random() * 16 | 0;
    const v = c == 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

async function testCompleteContractFlow() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö Workflow ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå...\n');

  try {
    // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥)
    console.log('1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢...');
    const lowIncomeCustomer = {
      name: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢',
      phone: '0812345678',
      email: 'low-income@test.com',
      address: '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÄ‡∏Ç‡∏ï‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10100',
      id_card: `${Math.floor(Math.random() * 9000000000000) + 1000000000000}`, // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£
      occupation: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      monthly_income: 12000, // ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 15,000 -> ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥
      branch_id: null
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let { data: existingCustomer } = await supabase
      .from('customers')
      .select('id')
      .eq('id_card', lowIncomeCustomer.id_card)
      .single();

    let customerId;
    if (existingCustomer) {
      customerId = existingCustomer.id;
      console.log('‚úÖ ‡πÉ‡∏ä‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:', customerId);
    } else {
      const { data: newCustomer, error: customerError } = await supabase
        .from('customers')
        .insert([lowIncomeCustomer])
        .select()
        .single();

      if (customerError) {
        console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', customerError);
        return;
      }

      customerId = newCustomer.id;
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', customerId);
    }

    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
    console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô...');
    const guarantorData = {
      name: '‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      phone: '0898765432',
      email: 'guarantor@test.com',
      address: '456 ‡∏ñ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10200',
      id_card: `${Math.floor(Math.random() * 9000000000000) + 1000000000000}`, // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£
      occupation: '‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£',
      monthly_income: 30000,
      workplace: '‡∏Å‡∏£‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      work_address: '789 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ ‡πÄ‡∏Ç‡∏ï‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10300',
      emergency_contact_name: '‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô',
      emergency_contact_phone: '0887654321',
      emergency_contact_relationship: '‡∏û‡∏µ‡πà‡∏ä‡∏≤‡∏¢',
      created_by: null,
      branch_id: null
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let { data: existingGuarantor } = await supabase
      .from('guarantors')
      .select('id')
      .eq('id_card', guarantorData.id_card)
      .single();

    let guarantorId;
    if (existingGuarantor) {
      guarantorId = existingGuarantor.id;
      console.log('‚úÖ ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:', guarantorId);
    } else {
      const { data: newGuarantor, error: guarantorError } = await supabase
        .from('guarantors')
        .insert([guarantorData])
        .select()
        .single();

      if (guarantorError) {
        console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:', guarantorError);
        return;
      }

      guarantorId = newGuarantor.id;
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', guarantorId);
    }

    // 3. ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞
    console.log('\n3Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞...');
    const { data: plans, error: plansError } = await supabase
      .from('installment_plans')
      .select('*')
      .eq('is_active', true)
      .limit(1);

    if (plansError || !plans.length) {
      console.error('‚ùå Error ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞:', plansError);
      return;
    }

    const selectedPlan = plans[0];
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô:', selectedPlan.plan_name);

    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤
    console.log('\n4Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤...');
    const contractAmount = 50000;
    const downPayment = Math.round(contractAmount * (selectedPlan.down_payment_percent / 100) * 100) / 100;
    const financedAmount = contractAmount - downPayment;

    const contractData = {
      contract_number: `TEST-${Date.now()}`,
      status: 'pending',
      transaction_id: generateUUID(),
      customer_id: customerId,
      plan_id: selectedPlan.id,
      guarantor_id: guarantorId, // ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
      down_payment: downPayment,
      remaining_amount: financedAmount,
      monthly_payment: selectedPlan.installment_amount,
      financed_amount: financedAmount,
      total_interest: 0,
      processing_fee: selectedPlan.processing_fee || 0,
      total_payable: financedAmount,
      contract_date: new Date().toISOString().split('T')[0],
      first_payment_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      last_payment_date: new Date(Date.now() + selectedPlan.number_of_installments * 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      paid_installments: 0,
      remaining_installments: selectedPlan.number_of_installments,
      total_paid: 0,
      remaining_balance: financedAmount,
      collateral: '‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      terms: '‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      notes: '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      created_by: null
    };

    const { data: contract, error: contractError } = await supabase
      .from('installment_contracts')
      .insert([contractData])
      .select()
      .single();

    if (contractError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', contractError);
      return;
    }

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', contract.contract_number);

    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join
    console.log('\n5Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join...');
    const { data: contractWithDetails, error: joinError } = await supabase
      .from('installment_contracts')
      .select(`
        *,
        customer:customers(*),
        guarantor:guarantors(*),
        plan:installment_plans(*)
      `)
      .eq('id', contract.id)
      .single();

    if (joinError) {
      console.error('‚ùå Error ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', joinError);
      return;
    }

    console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤:');
    console.log('   üè∑Ô∏è  ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', contractWithDetails.contract_number);
    console.log('   üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', contractWithDetails.customer.name);
    console.log('   üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', contractWithDetails.customer.monthly_income.toLocaleString(), '‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô');
    console.log('   ü§ù ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:', contractWithDetails.guarantor.name);
    console.log('   üìã ‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô:', contractWithDetails.plan.plan_name);
    console.log('   üíµ ‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:', contractAmount.toLocaleString(), '‡∏ö‡∏≤‡∏ó');
    console.log('   üí≥ ‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå:', downPayment.toLocaleString(), '‡∏ö‡∏≤‡∏ó');
    console.log('   üìÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏ß‡∏î:', selectedPlan.number_of_installments, '‡∏á‡∏ß‡∏î');
    console.log('   üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', contractWithDetails.status);

    // 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Workflow ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥)
    console.log('\n6Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥)...');
    const highIncomeCustomer = {
      name: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á',
      phone: '0823456789',
      email: 'high-income@test.com',
      address: '999 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á ‡πÄ‡∏Ç‡∏ï‡∏£‡∏ß‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400',
      id_card: `${Math.floor(Math.random() * 9000000000000) + 1000000000000}`,
      occupation: '‡∏ô‡∏±‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à',
      monthly_income: 50000, // ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤ 15,000 -> ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥
      branch_id: null
    };

    const { data: richCustomer, error: richCustomerError } = await supabase
      .from('customers')
      .insert([highIncomeCustomer])
      .select()
      .single();

    if (richCustomerError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á:', richCustomerError);
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
    const contractWithoutGuarantor = {
      contract_number: `RICH-${Date.now()}`,
      status: 'pending',
      transaction_id: generateUUID(),
      customer_id: richCustomer.id,
      plan_id: selectedPlan.id,
      guarantor_id: null, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
      down_payment: downPayment,
      remaining_amount: financedAmount,
      monthly_payment: selectedPlan.installment_amount,
      financed_amount: financedAmount,
      total_interest: 0,
      processing_fee: selectedPlan.processing_fee || 0,
      total_payable: financedAmount,
      contract_date: new Date().toISOString().split('T')[0],
      first_payment_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      last_payment_date: new Date(Date.now() + selectedPlan.number_of_installments * 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      paid_installments: 0,
      remaining_installments: selectedPlan.number_of_installments,
      total_paid: 0,
      remaining_balance: financedAmount,
      created_by: null
    };

    const { data: richContract, error: richContractError } = await supabase
      .from('installment_contracts')
      .insert([contractWithoutGuarantor])
      .select()
      .single();

    if (richContractError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á:', richContractError);
      return;
    }

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', richContract.contract_number);
    console.log('   üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', richCustomer.name);
    console.log('   üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ:', richCustomer.monthly_income.toLocaleString(), '‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô');
    console.log('   ü§ù ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô: ‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)');

    console.log('\nüéâ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Workflow ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢ + ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô + ‡∏™‡∏±‡∏ç‡∏ç‡∏≤');
    console.log('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á + ‡∏™‡∏±‡∏ç‡∏ç‡∏≤ (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥)');
    console.log('   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö UUID generation ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    console.log('   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö Database constraints ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    console.log('   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö Join queries ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');

  } catch (error) {
    console.error('üí• Error ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  testCompleteContractFlow();
}

module.exports = { testCompleteContractFlow };
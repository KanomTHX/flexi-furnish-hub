import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://hartshwcchbsnmbrjdyn.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhhcnRzaHdjY2hic25tYnJqZHluIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDAzNzU3NCwiZXhwIjoyMDY5NjEzNTc0fQ.EuWZV7-3o9GsDPGKAS4L4L3t7GKQkn7kfnoHpc9IzOw'
);

async function testContractsEnumValues() {
  console.log('üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ enum ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö installment_contracts');
  console.log('================================================================');

  // ‡∏•‡∏≠‡∏á‡∏Ñ‡πà‡∏≤ status ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
  const possibleStatuses = [
    'active',
    'pending',
    'completed',
    'cancelled',
    'approved',
    'rejected',
    'processing',
    'paid',
    'unpaid',
    'overdue'
  ];

  for (const status of possibleStatuses) {
    try {
      console.log(`\n‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà status: "${status}"`);
      
      const { data, error } = await supabase
        .from('installment_contracts')
        .insert({ status: status })
        .select();

      if (error) {
        if (error.message.includes('invalid input value for enum')) {
          console.log(`‚ùå "${status}": ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
        } else {
          console.log(`üîç "${status}": ${error.message}`);
          
          // ‡∏ñ‡πâ‡∏≤ error ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö NOT NULL constraint ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ status ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
          if (error.message.includes('null value in column')) {
            console.log(`‚úÖ "${status}": ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!`);
            const match = error.message.match(/null value in column "([^"]+)"/);
            if (match) {
              console.log(`   ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: ${match[1]}`);
            }
            break; // ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
          }
        }
      } else {
        console.log(`‚úÖ "${status}": Insert ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
        if (data && data[0]) {
          console.log('\nüìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á installment_contracts:');
          Object.keys(data[0]).forEach(col => {
            const value = data[0][col];
            const type = typeof value;
            console.log(`   - ${col}: ${type} = ${value}`);
          });
          
          // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          await supabase
            .from('installment_contracts')
            .delete()
            .eq('id', data[0].id);
          console.log('üóëÔ∏è  ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
        }
        break; // ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠ insert ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      }
    } catch (err) {
      console.log(`‚ùå "${status}": ${err.message}`);
    }
  }

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏•‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà status
  console.log('\nüîç ‡∏•‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà status (‡πÉ‡∏ä‡πâ default value):');
  try {
    const { data, error } = await supabase
      .from('installment_contracts')
      .insert({})
      .select();

    if (error) {
      console.log(`‚ùå Error: ${error.message}`);
      
      if (error.message.includes('null value in column')) {
        const match = error.message.match(/null value in column "([^"]+)"/);
        if (match) {
          console.log(`‚ö†Ô∏è  ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤: ${match[1]}`);
        }
      }
    } else {
      console.log('‚úÖ Insert ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      if (data && data[0]) {
        console.log('\nüìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á installment_contracts:');
        Object.keys(data[0]).forEach(col => {
          const value = data[0][col];
          const type = typeof value;
          console.log(`   - ${col}: ${type} = ${value}`);
        });
        
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        await supabase
          .from('installment_contracts')
          .delete()
          .eq('id', data[0].id);
        console.log('üóëÔ∏è  ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
      }
    }
  } catch (err) {
    console.log(`‚ùå Error: ${err.message}`);
  }
}

testContractsEnumValues();
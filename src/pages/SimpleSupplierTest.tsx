// Very Simple Supplier Test
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { toast } from 'sonner';
import { supabase } from '@/integrations/supabase/client';

const SimpleSupplierTest = () => {
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState('');

  const testDirectConnection = async () => {
    try {
      setLoading(true);
      setResult('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');
      
      console.log('Testing direct Supabase connection...');
      
      // Test direct query
      const { data, error } = await (supabase as any)
        .from('suppliers')
        .select('*')
        .limit(5);

      if (error) {
        console.error('Supabase error:', error);
        setResult(`‚ùå Error: ${error.message}`);
        toast.error('‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        return;
      }

      console.log('Direct query result:', data);
      setResult(`‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${data?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      toast.success('‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      
    } catch (error: any) {
      console.error('Connection error:', error);
      setResult(`‚ùå Exception: ${error.message}`);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    } finally {
      setLoading(false);
    }
  };

  const testCreateSupplier = async () => {
    try {
      setLoading(true);
      setResult('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå...');
      
      const timestamp = Date.now().toString().slice(-6);
      const testData = {
        supplier_code: `TEST${timestamp}`,
        supplier_name: `‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ${timestamp} ‡∏à‡∏≥‡∏Å‡∏±‡∏î`,
        contact_person: '‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        phone: '02-123-4567',
        email: `test${timestamp}@example.com`,
        address: '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        tax_id: `1234567890${timestamp.slice(-3)}`,
        payment_terms: 30,
        credit_limit: 100000,
        notes: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        status: 'active'
      };

      console.log('Creating supplier with data:', testData);

      const { data, error } = await (supabase as any)
        .from('suppliers')
        .insert([testData])
        .select()
        .single();

      if (error) {
        console.error('Create error:', error);
        setResult(`‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
        toast.error('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        return;
      }

      console.log('Created supplier:', data);
      setResult(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ID: ${data.id}, ‡∏ä‡∏∑‡πà‡∏≠: ${data.supplier_name}`);
      toast.success('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      
    } catch (error: any) {
      console.error('Create exception:', error);
      setResult(`‚ùå Exception: ${error.message}`);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    } finally {
      setLoading(false);
    }
  };

  const testListSuppliers = async () => {
    try {
      setLoading(true);
      setResult('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå...');
      
      const { data, error } = await (supabase as any)
        .from('suppliers')
        .select('id, supplier_code, supplier_name, status')
        .order('created_at', { ascending: false })
        .limit(10);

      if (error) {
        console.error('List error:', error);
        setResult(`‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
        toast.error('‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        return;
      }

      console.log('Suppliers list:', data);
      
      if (data && data.length > 0) {
        const list = data.map((s: any) => `${s.supplier_code}: ${s.supplier_name}`).join('\n');
        setResult(`‚úÖ ‡∏û‡∏ö‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå ${data.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:\n${list}`);
      } else {
        setResult('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
      }
      
      toast.success('‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      
    } catch (error: any) {
      console.error('List exception:', error);
      setResult(`‚ùå Exception: ${error.message}`);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container mx-auto p-6 space-y-6">
      <div>
        <h1 className="text-3xl font-bold">üß™ Simple Supplier Test</h1>
        <p className="text-muted-foreground">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Supplier ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ</p>
      </div>

      <div className="grid gap-4 md:grid-cols-3">
        <Button 
          onClick={testDirectConnection}
          disabled={loading}
          variant="outline"
        >
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö...' : '1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠'}
        </Button>

        <Button 
          onClick={testCreateSupplier}
          disabled={loading}
        >
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...' : '2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå'}
        </Button>

        <Button 
          onClick={testListSuppliers}
          disabled={loading}
          variant="secondary"
        >
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...' : '3. ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå'}
        </Button>
      </div>

      <div className="bg-gray-100 p-4 rounded-lg min-h-[200px]">
        <h3 className="font-bold mb-2">‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</h3>
        <pre className="whitespace-pre-wrap text-sm">
          {result || '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö...'}
        </pre>
      </div>

      <div className="text-sm text-gray-600">
        <p><strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong></p>
        <p>1. ‡πÄ‡∏õ‡∏¥‡∏î Browser Console (F12) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π log ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</p>
        <p>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö: ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå ‚Üí ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        <p>3. ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÉ‡∏´‡πâ‡∏î‡∏π error message ‡πÉ‡∏ô console</p>
      </div>
    </div>
  );
};

export default SimpleSupplierTest;
// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
import { createClient } from '@supabase/supabase-js';

// Supabase configuration
const supabaseUrl = 'https://hartshwcchbsnmbrjdyn.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhhcnRzaHdjY2hic25tYnJqZHluIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NDAzNzU3NCwiZXhwIjoyMDY5NjEzNTc0fQ.EuWZV7-3o9GsDPGKAS4L4L3t7GKQkn7kfnoHpc9IzOw';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkReceiveLogs() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
  
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('\nüìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á receive_logs
    console.log('\n1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á receive_logs:');
    const { data: receiveLogs, error: receiveError } = await supabase
      .from('receive_logs')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(10);

    if (receiveError) {
      console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á receive_logs ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:', receiveError.message);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      console.log('\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á warehouses:');
      const { data: warehouses, error: warehouseError } = await supabase
        .from('warehouses')
        .select('*')
        .limit(5);
      
      if (warehouseError) {
        console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á warehouses:', warehouseError.message);
      } else {
        console.log(`‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á warehouses: ‡∏û‡∏ö ${warehouses?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        if (warehouses && warehouses.length > 0) {
          warehouses.forEach((wh, index) => {
            console.log(`   ${index + 1}. ${wh.name} (${wh.code || wh.id})`);
          });
        }
      }
      
      console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á suppliers:');
      const { data: suppliers, error: supplierError } = await supabase
        .from('suppliers')
        .select('*')
        .limit(5);
      
      if (supplierError) {
        console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á suppliers:', supplierError.message);
      } else {
        console.log(`‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á suppliers: ‡∏û‡∏ö ${suppliers?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        if (suppliers && suppliers.length > 0) {
          suppliers.forEach((sup, index) => {
            console.log(`   ${index + 1}. ${sup.name || sup.supplier_name} (${sup.code || sup.supplier_code || sup.id})`);
          });
        }
      }
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      console.log('\n4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á stock_movements:');
      const { data: movements, error: movementError } = await supabase
        .from('stock_movements')
        .select('*')
        .eq('movement_type', 'receive')
        .order('created_at', { ascending: false })
        .limit(5);
      
      if (movementError) {
        console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á stock_movements:', movementError.message);
      } else {
        console.log(`‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á stock_movements (receive): ‡∏û‡∏ö ${movements?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        if (movements && movements.length > 0) {
          movements.forEach((mov, index) => {
            console.log(`   ${index + 1}. Product: ${mov.product_id}, Qty: ${mov.quantity}, Ref: ${mov.reference_number}`);
          });
        }
      }
      
      console.log('\n5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á product_inventory:');
      const { data: inventory, error: inventoryError } = await supabase
        .from('product_inventory')
        .select('*')
        .order('last_updated', { ascending: false })
        .limit(5);
      
      if (inventoryError) {
        console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á product_inventory:', inventoryError.message);
      } else {
        console.log(`‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á product_inventory: ‡∏û‡∏ö ${inventory?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        if (inventory && inventory.length > 0) {
          inventory.forEach((inv, index) => {
            console.log(`   ${index + 1}. Product: ${inv.product_id}, Warehouse: ${inv.warehouse_id}, Qty: ${inv.quantity}`);
          });
        }
      }
      
      return;
    }

    console.log(`‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô receive_logs ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${receiveLogs?.length || 0}`);
    
    if (receiveLogs && receiveLogs.length > 0) {
      console.log('\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:');
      receiveLogs.forEach((log, index) => {
        console.log(`\n${index + 1}. ${log.receive_number}`);
        console.log(`   - Supplier ID: ${log.supplier_id || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
        console.log(`   - Warehouse ID: ${log.warehouse_id}`);
        console.log(`   - Invoice: ${log.invoice_number || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: ${log.total_items}`);
        console.log(`   - ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${log.total_cost}`);
        console.log(`   - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${log.status}`);
        console.log(`   - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: ${new Date(log.created_at).toLocaleString('th-TH')}`);
        console.log(`   - ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ${log.notes || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
      });
    } else {
      console.log('üìù ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á stock_movements ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö stock_movements ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á...');
    const { data: movements, error: movementError } = await supabase
      .from('stock_movements')
      .select('*')
      .eq('movement_type', 'receive')
      .order('created_at', { ascending: false })
      .limit(10);

    if (movementError) {
      console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• stock_movements:', movementError.message);
      return;
    }

    console.log(`‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô stock_movements (receive) ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${movements?.length || 0}`);
    
    if (movements && movements.length > 0) {
      console.log('\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ stock movements ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:');
      movements.forEach((movement, index) => {
        console.log(`\n${index + 1}. Movement ID: ${movement.id}`);
        console.log(`   - Product ID: ${movement.product_id}`);
        console.log(`   - Warehouse ID: ${movement.warehouse_id}`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${movement.quantity}`);
        console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢: ${movement.unit_cost}`);
        console.log(`   - Reference: ${movement.reference_number || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
        console.log(`   - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: ${new Date(movement.created_at).toLocaleString('th-TH')}`);
      });
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á product_inventory
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    const { data: inventory, error: inventoryError } = await supabase
      .from('product_inventory')
      .select('*')
      .order('last_updated', { ascending: false })
      .limit(5);

    if (inventoryError) {
      console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• product_inventory:', inventoryError.message);
      return;
    }

    console.log(`‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å: ${inventory?.length || 0}`);
    
    if (inventory && inventory.length > 0) {
      console.log('\nüìã ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:');
      inventory.forEach((item, index) => {
        console.log(`\n${index + 1}. Product ID: ${item.product_id}`);
        console.log(`   - Warehouse ID: ${item.warehouse_id}`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${item.quantity}`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á: ${item.reserved_quantity}`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ: ${item.available_quantity}`);
        console.log(`   - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date(item.last_updated).toLocaleString('th-TH')}`);
      });
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
checkReceiveLogs();
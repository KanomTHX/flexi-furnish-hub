// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤
const { createClient } = require('@supabase/supabase-js');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase client
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function testExistingCustomerSelection() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤...\n');

  try {
    // Test Case 1: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤
    console.log('üìù Test Case 1: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤');
    const { data: customers, error: customersError } = await supabase
      .from('customers')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(10);

    if (customersError) {
      console.log('‚ùå Error:', customersError.message);
    } else {
      console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', customers.length);
      if (customers.length > 0) {
        console.log('   ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:', customers[0].name);
        console.log('   ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', customers[0].phone);
        console.log('   ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:', new Date(customers[0].created_at).toLocaleDateString('th-TH'));
      }
    }

    // Test Case 2: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠
    console.log('\nüìù Test Case 2: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠');
    const searchTerm = '‡∏ó‡∏î‡∏™‡∏≠‡∏ö';
    const filteredCustomers = customers?.filter(customer =>
      customer.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||
      customer.phone?.includes(searchTerm) ||
      customer.email?.toLowerCase().includes(searchTerm.toLowerCase())
    ) || [];

    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('   ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:', searchTerm);
    console.log('   ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:', filteredCustomers.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');

    // Test Case 3: ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    if (customers && customers.length > 0) {
      const testCustomer = customers[0];
      console.log('\nüìù Test Case 3: ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤');
      console.log('   ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', testCustomer.name);

      const { data: contracts, error: contractsError } = await supabase
        .from('installment_contracts')
        .select(`
          *,
          installment_plans (
            name,
            number_of_installments,
            interest_rate
          )
        `)
        .eq('customer_id', testCustomer.id)
        .order('created_at', { ascending: false });

      if (contractsError) {
        console.log('‚ùå Error:', contractsError.message);
      } else {
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        console.log('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', contracts.length);
        if (contracts.length > 0) {
          console.log('   ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:');
          console.log('     ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø' + contracts[0].total_amount?.toLocaleString());
          console.log('     ‡πÅ‡∏ú‡∏ô:', contracts[0].installment_plans?.name);
          console.log('     ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', contracts[0].status);
          console.log('     ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:', new Date(contracts[0].created_at).toLocaleDateString('th-TH'));
        }
      }

      // Test Case 4: ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤
      console.log('\nüìù Test Case 4: ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤');
      const { data: guarantors, error: guarantorsError } = await supabase
        .from('guarantors')
        .select('*')
        .eq('customer_id', testCustomer.id)
        .order('created_at', { ascending: false });

      if (guarantorsError) {
        console.log('‚ùå Error:', guarantorsError.message);
      } else {
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        console.log('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:', guarantors.length);
        if (guarantors.length > 0) {
          console.log('   ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:');
          console.log('     ‡∏ä‡∏∑‡πà‡∏≠:', guarantors[0].name);
          console.log('     ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', guarantors[0].phone);
          console.log('     ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û:', guarantors[0].occupation);
          console.log('     ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ: ‡∏ø' + guarantors[0].monthly_income?.toLocaleString());
        }
      }
    }

    // Test Case 5: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)
    if (!customers || customers.length === 0) {
      console.log('\nüìù Test Case 5: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
      
      const testCustomerData = {
        name: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö ' + Date.now(),
        phone: '081-234-5678',
        email: 'test@example.com',
        id_card: '1234567890123',
        occupation: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó',
        monthly_income: 30000,
        address: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        province: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        district: '‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å',
        subdistrict: '‡∏™‡∏µ‡∏•‡∏°',
        zip_code: '10500',
        created_at: new Date().toISOString()
      };

      const { data: newCustomer, error: createError } = await supabase
        .from('customers')
        .insert([testCustomerData])
        .select()
        .single();

      if (createError) {
        console.log('‚ùå Error:', createError.message);
      } else {
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        console.log('   ID:', newCustomer.id);
        console.log('   ‡∏ä‡∏∑‡πà‡∏≠:', newCustomer.name);
        console.log('   ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', newCustomer.phone);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        const testContractData = {
          customer_id: newCustomer.id,
          total_amount: 50000,
          down_payment: 10000,
          loan_amount: 40000,
          monthly_payment: 4000,
          number_of_installments: 12,
          interest_rate: 5.0,
          status: 'active',
          created_at: new Date().toISOString()
        };

        const { data: newContract, error: contractError } = await supabase
          .from('installment_contracts')
          .insert([testContractData])
          .select()
          .single();

        if (contractError) {
          console.log('‚ùå Error creating contract:', contractError.message);
        } else {
          console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
          console.log('   ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø' + newContract.total_amount.toLocaleString());
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        const testGuarantorData = {
          customer_id: newCustomer.id,
          name: '‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
          phone: '082-345-6789',
          id_card: '9876543210987',
          occupation: '‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£',
          monthly_income: 40000,
          address: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô',
          relationship: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô',
          created_at: new Date().toISOString()
        };

        const { data: newGuarantor, error: guarantorError } = await supabase
          .from('guarantors')
          .insert([testGuarantorData])
          .select()
          .single();

        if (guarantorError) {
          console.log('‚ùå Error creating guarantor:', guarantorError.message);
        } else {
          console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
          console.log('   ‡∏ä‡∏∑‡πà‡∏≠:', newGuarantor.name);
        }
      }
    }

    // Test Case 6: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('\nüìù Test Case 6: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 25,000
    const highIncomeCustomers = customers?.filter(customer => 
      customer.monthly_income && customer.monthly_income > 25000
    ) || [];

    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('   ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á (>25,000):', highIncomeCustomers.length, '‡∏Ñ‡∏ô');

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
    const thisMonth = new Date();
    thisMonth.setDate(1);
    const recentCustomers = customers?.filter(customer => 
      new Date(customer.created_at) >= thisMonth
    ) || [];

    console.log('   ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:', recentCustomers.length, '‡∏Ñ‡∏ô');

    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error.message);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö Performance
async function testPerformance() {
  console.log('\n‚ö° ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û...');
  
  try {
    const startTime = Date.now();
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å
    const { data: manyCustomers, error } = await supabase
      .from('customers')
      .select('id, name, phone, email, created_at')
      .order('created_at', { ascending: false })
      .limit(100);

    const endTime = Date.now();
    const duration = endTime - startTime;

    if (error) {
      console.log('‚ùå Error:', error.message);
    } else {
      console.log('‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', manyCustomers.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
      console.log('   ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:', duration, 'ms');
      console.log('   ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û:', duration < 1000 ? '‡∏î‡∏µ' : '‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á');
    }
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û:', error.message);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function cleanupTestData() {
  console.log('\nüßπ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');
  
  try {
    // ‡∏•‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    const { data: testCustomers, error: fetchError } = await supabase
      .from('customers')
      .select('id, name')
      .like('name', '%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%');

    if (fetchError) {
      console.log('‚ùå Error:', fetchError.message);
      return;
    }

    if (testCustomers.length === 0) {
      console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');
      return;
    }

    console.log(`üìã ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö ${testCustomers.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:`);
    testCustomers.forEach((customer, index) => {
      console.log(`   ${index + 1}. ${customer.name} (ID: ${customer.id})`);
    });

    console.log('\n‚ö†Ô∏è  ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:');
    console.log('   DELETE FROM customers WHERE name LIKE \'%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%\';');
    console.log('   DELETE FROM installment_contracts WHERE customer_id IN (SELECT id FROM customers WHERE name LIKE \'%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%\');');
    console.log('   DELETE FROM guarantors WHERE customer_id IN (SELECT id FROM customers WHERE name LIKE \'%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%\');');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:', error.message);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤\n');
  console.log('‚ö†Ô∏è  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase URL ‡πÅ‡∏•‡∏∞ Key ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö\n');
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  console.log('üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
  console.log('1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç supabaseUrl ‡πÅ‡∏•‡∏∞ supabaseKey ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ');
  console.log('2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: node test_existing_customer_selection.js');
  console.log('3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö\n');
  
  // testExistingCustomerSelection();
  // testPerformance();
  // cleanupTestData();
}

module.exports = {
  testExistingCustomerSelection,
  testPerformance,
  cleanupTestData
};
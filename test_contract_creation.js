// ===================================================================
// SCRIPT ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞
// ===================================================================

const { createClient } = require('@supabase/supabase-js');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase (‡πÉ‡∏ä‡πâ environment variables ‡∏à‡∏£‡∏¥‡∏á)
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'YOUR_SUPABASE_URL';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'YOUR_SUPABASE_KEY';
const supabase = createClient(supabaseUrl, supabaseKey);

async function testContractCreation() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞...\n');

  try {
    // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
    console.log('1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô...');
    const guarantorData = {
      name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô',
      phone: '0812345678',
      email: 'guarantor@test.com',
      address: '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÄ‡∏Ç‡∏ï‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10100',
      id_card: '1234567890123',
      occupation: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó',
      monthly_income: 25000,
      workplace: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
      work_address: '456 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
      emergency_contact_name: '‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô',
      emergency_contact_phone: '0898765432',
      emergency_contact_relationship: '‡∏û‡∏µ‡πà‡∏ä‡∏≤‡∏¢',
      created_by: null,
      branch_id: null
    };

    const { data: guarantor, error: guarantorError } = await supabase
      .from('guarantors')
      .insert([guarantorData])
      .select()
      .single();

    if (guarantorError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:', guarantorError);
      return;
    }

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', guarantor.id);

    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤...');
    const customerData = {
      name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
      phone: '0887654321',
      email: 'customer@test.com',
      address: '789 ‡∏ñ‡∏ô‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏Ç‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10200',
      id_card: '9876543210987',
      occupation: '‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£',
      monthly_income: 12000, // ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 15,000 -> ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥
      branch_id: null
    };

    const { data: customer, error: customerError } = await supabase
      .from('customers')
      .insert([customerData])
      .select()
      .single();

    if (customerError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', customerError);
      return;
    }

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', customer.id);
    console.log('üí° ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', customer.monthly_income, '‡∏ö‡∏≤‡∏ó (< 15,000 -> ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥)');

    // 3. ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞
    console.log('\n3Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞...');
    const { data: plans, error: plansError } = await supabase
      .from('installment_plans')
      .select('*')
      .eq('is_active', true)
      .limit(1);

    if (plansError || !plans.length) {
      console.error('‚ùå Error ‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞:', plansError);
      return;
    }

    const selectedPlan = plans[0];
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô:', selectedPlan.plan_name);

    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤
    console.log('\n4Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤...');
    const contractData = {
      contract_number: `TEST-${Date.now()}`,
      status: 'pending',
      transaction_id: crypto.randomUUID(),
      customer_id: customer.id,
      plan_id: selectedPlan.id,
      guarantor_id: guarantor.id, // ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
      down_payment: 5000,
      remaining_amount: 45000,
      monthly_payment: selectedPlan.installment_amount,
      financed_amount: 45000,
      total_interest: 0,
      processing_fee: selectedPlan.processing_fee || 0,
      total_payable: 45000,
      contract_date: new Date().toISOString().split('T')[0],
      first_payment_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      last_payment_date: new Date(Date.now() + selectedPlan.number_of_installments * 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      paid_installments: 0,
      remaining_installments: selectedPlan.number_of_installments,
      total_paid: 0,
      remaining_balance: 45000,
      collateral: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô',
      terms: '‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      notes: '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      created_by: null
    };

    const { data: contract, error: contractError } = await supabase
      .from('installment_contracts')
      .insert([contractData])
      .select()
      .single();

    if (contractError) {
      console.error('‚ùå Error ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', contractError);
      return;
    }

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', contract.contract_number);

    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join
    console.log('\n5Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join...');
    const { data: contractWithDetails, error: joinError } = await supabase
      .from('installment_contracts')
      .select(`
        *,
        customer:customers(*),
        guarantor:guarantors(*),
        plan:installment_plans(*)
      `)
      .eq('id', contract.id)
      .single();

    if (joinError) {
      console.error('‚ùå Error ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤:', joinError);
      return;
    }

    console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° join ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:');
    console.log('   - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', contractWithDetails.customer.name);
    console.log('   - ‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:', contractWithDetails.guarantor.name);
    console.log('   - ‡πÅ‡∏ú‡∏ô:', contractWithDetails.plan.plan_name);
    console.log('   - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', contractWithDetails.status);

    console.log('\nüéâ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');

  } catch (error) {
    console.error('üí• Error ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  testContractCreation();
}

module.exports = { testContractCreation };
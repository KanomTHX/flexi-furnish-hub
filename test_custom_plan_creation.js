// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
const { createClient } = require('@supabase/supabase-js');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase client
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function testCustomPlanCreation() {
  console.log('üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á...\n');

  try {
    // Test Case 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    console.log('üìù Test Case 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô');
    const basicPlan = {
      plan_number: `CUSTOM-${Date.now()}-BASIC`,
      name: '‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö 12 ‡∏á‡∏ß‡∏î',
      description: '‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤',
      number_of_installments: 12,
      interest_rate: 5.0,
      down_payment_percent: 20,
      processing_fee: 500,
      total_amount: 1000000,
      installment_amount: 0,
      is_active: true,
      status: 'active',
      start_date: new Date().toISOString().split('T')[0],
      branch_id: null
    };

    const { data: basicResult, error: basicError } = await supabase
      .from('installment_plans')
      .insert([basicPlan])
      .select()
      .single();

    if (basicError) {
      console.log('‚ùå Error:', basicError.message);
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ID:', basicResult.id);
      console.log('   ‡∏ä‡∏∑‡πà‡∏≠:', basicResult.name);
      console.log('   ‡∏á‡∏ß‡∏î:', basicResult.number_of_installments);
      console.log('   ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:', basicResult.interest_rate + '%');
    }

    // Test Case 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢
    console.log('\nüìù Test Case 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢');
    const noInterestPlan = {
      plan_number: `CUSTOM-${Date.now()}-ZERO`,
      name: '‡πÅ‡∏ú‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 6 ‡∏á‡∏ß‡∏î',
      description: '‡πÅ‡∏ú‡∏ô‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©',
      number_of_installments: 6,
      interest_rate: 0,
      down_payment_percent: 30,
      processing_fee: 0,
      total_amount: 1000000,
      installment_amount: 0,
      is_active: true,
      status: 'active',
      start_date: new Date().toISOString().split('T')[0],
      branch_id: null
    };

    const { data: zeroResult, error: zeroError } = await supabase
      .from('installment_plans')
      .insert([noInterestPlan])
      .select()
      .single();

    if (zeroError) {
      console.log('‚ùå Error:', zeroError.message);
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ID:', zeroResult.id);
      console.log('   ‡∏ä‡∏∑‡πà‡∏≠:', zeroResult.name);
      console.log('   ‡∏á‡∏ß‡∏î:', zeroResult.number_of_installments);
      console.log('   ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:', zeroResult.interest_rate + '%');
    }

    // Test Case 3: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß
    console.log('\nüìù Test Case 3: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß');
    const longTermPlan = {
      plan_number: `CUSTOM-${Date.now()}-LONG`,
      name: '‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß 36 ‡∏á‡∏ß‡∏î',
      description: '‡πÅ‡∏ú‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á',
      number_of_installments: 36,
      interest_rate: 8.5,
      down_payment_percent: 15,
      processing_fee: 1000,
      total_amount: 1000000,
      installment_amount: 0,
      is_active: true,
      status: 'active',
      start_date: new Date().toISOString().split('T')[0],
      branch_id: null
    };

    const { data: longResult, error: longError } = await supabase
      .from('installment_plans')
      .insert([longTermPlan])
      .select()
      .single();

    if (longError) {
      console.log('‚ùå Error:', longError.message);
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ID:', longResult.id);
      console.log('   ‡∏ä‡∏∑‡πà‡∏≠:', longResult.name);
      console.log('   ‡∏á‡∏ß‡∏î:', longResult.number_of_installments);
      console.log('   ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:', longResult.interest_rate + '%');
    }

    // Test Case 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log('\nüìù Test Case 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà');
    const { data: allPlans, error: fetchError } = await supabase
      .from('installment_plans')
      .select('*')
      .eq('is_active', true)
      .order('created_at', { ascending: false })
      .limit(10);

    if (fetchError) {
      console.log('‚ùå Error:', fetchError.message);
    } else {
      console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', allPlans.length);
      console.log('   ‡πÅ‡∏ú‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 3 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö:');
      allPlans.slice(0, 3).forEach((plan, index) => {
        console.log(`   ${index + 1}. ${plan.name} (${plan.number_of_installments} ‡∏á‡∏ß‡∏î, ${plan.interest_rate}%)`);
      });
    }

    // Test Case 5: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    console.log('\nüìù Test Case 5: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì');
    const testAmount = 50000;
    const testPlan = basicResult || { 
      interest_rate: 5, 
      number_of_installments: 12, 
      down_payment_percent: 20 
    };

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå
    const downPayment = Math.round(testAmount * (testPlan.down_payment_percent / 100));
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏ú‡πà‡∏≠‡∏ô
    const loanAmount = testAmount - downPayment;
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏á‡∏ß‡∏î (‡∏™‡∏π‡∏ï‡∏£‡∏á‡πà‡∏≤‡∏¢)
    const monthlyInterestRate = testPlan.interest_rate / 100 / 12;
    const monthlyPayment = monthlyInterestRate > 0 
      ? Math.round(loanAmount * (monthlyInterestRate * Math.pow(1 + monthlyInterestRate, testPlan.number_of_installments)) / (Math.pow(1 + monthlyInterestRate, testPlan.number_of_installments) - 1))
      : Math.round(loanAmount / testPlan.number_of_installments);

    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('   ‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡∏ø' + testAmount.toLocaleString());
    console.log('   ‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå: ‡∏ø' + downPayment.toLocaleString());
    console.log('   ‡∏¢‡∏≠‡∏î‡∏ú‡πà‡∏≠‡∏ô: ‡∏ø' + loanAmount.toLocaleString());
    console.log('   ‡∏Ñ‡πà‡∏≤‡∏á‡∏ß‡∏î: ‡∏ø' + monthlyPayment.toLocaleString() + '/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô');

    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error.message);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function cleanupTestPlans() {
  console.log('\nüßπ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');
  
  try {
    const { data: testPlans, error: fetchError } = await supabase
      .from('installment_plans')
      .select('id, name')
      .like('plan_number', 'CUSTOM-%')
      .like('name', '%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%');

    if (fetchError) {
      console.log('‚ùå Error:', fetchError.message);
      return;
    }

    if (testPlans.length === 0) {
      console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');
      return;
    }

    console.log(`üìã ‡∏û‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ${testPlans.length} ‡πÅ‡∏ú‡∏ô:`);
    testPlans.forEach((plan, index) => {
      console.log(`   ${index + 1}. ${plan.name} (ID: ${plan.id})`);
    });

    // ‡∏ñ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö (‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á)
    console.log('\n‚ö†Ô∏è  ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:');
    console.log('   DELETE FROM installment_plans WHERE plan_number LIKE \'CUSTOM-%\' AND name LIKE \'%‡∏ó‡∏î‡∏™‡∏≠‡∏ö%\';');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:', error.message);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á\n');
  console.log('‚ö†Ô∏è  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase URL ‡πÅ‡∏•‡∏∞ Key ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö\n');
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  console.log('üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
  console.log('1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç supabaseUrl ‡πÅ‡∏•‡∏∞ supabaseKey ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ');
  console.log('2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: node test_custom_plan_creation.js');
  console.log('3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö\n');
  
  // testCustomPlanCreation();
  // cleanupTestPlans();
}

module.exports = {
  testCustomPlanCreation,
  cleanupTestPlans
};